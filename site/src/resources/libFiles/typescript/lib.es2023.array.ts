const fileData = {
    fileName: `/lib.es2023.array.d.ts`,
    // File text is copyright Microsoft Corporation and is distributed under the Apache License, Version 2.0 (http://www.apache.org/licenses/LICENSE-2.0)
    text: "/// <reference no-default-lib=\"true\"/>\ninterface Array<T>{findLast<S extends T>(predicate:(value:T,index:number,array:T[])=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:T,index:number,array:T[])=>unknown,thisArg?:any):T|undefined;findLastIndex(predicate:(value:T,index:number,array:T[])=>unknown,thisArg?:any):number;}interface ReadonlyArray<T>{findLast<S extends T>(predicate:(value:T,index:number,array:readonly T[])=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:T,index:number,array:readonly T[])=>unknown,thisArg?:any):T|undefined;findLastIndex(predicate:(value:T,index:number,array:readonly T[])=>unknown,thisArg?:any):number;}interface Int8Array{findLast<S extends number>(predicate:(value:number,index:number,array:Int8Array)=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:number,index:number,array:Int8Array)=>unknown,thisArg?:any):number|undefined;findLastIndex(predicate:(value:number,index:number,array:Int8Array)=>unknown,thisArg?:any):number;}interface Uint8Array{findLast<S extends number>(predicate:(value:number,index:number,array:Uint8Array)=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:number,index:number,array:Uint8Array)=>unknown,thisArg?:any):number|undefined;findLastIndex(predicate:(value:number,index:number,array:Uint8Array)=>unknown,thisArg?:any):number;}interface Uint8ClampedArray{findLast<S extends number>(predicate:(value:number,index:number,array:Uint8ClampedArray)=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:number,index:number,array:Uint8ClampedArray)=>unknown,thisArg?:any):number|undefined;findLastIndex(predicate:(value:number,index:number,array:Uint8ClampedArray)=>unknown,thisArg?:any):number;}interface Int16Array{findLast<S extends number>(predicate:(value:number,index:number,array:Int16Array)=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:number,index:number,array:Int16Array)=>unknown,thisArg?:any):number|undefined;findLastIndex(predicate:(value:number,index:number,array:Int16Array)=>unknown,thisArg?:any):number;}interface Uint16Array{findLast<S extends number>(predicate:(value:number,index:number,array:Uint16Array)=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:number,index:number,array:Uint16Array)=>unknown,thisArg?:any):number|undefined;findLastIndex(predicate:(value:number,index:number,array:Uint16Array)=>unknown,thisArg?:any):number;}interface Int32Array{findLast<S extends number>(predicate:(value:number,index:number,array:Int32Array)=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:number,index:number,array:Int32Array)=>unknown,thisArg?:any):number|undefined;findLastIndex(predicate:(value:number,index:number,array:Int32Array)=>unknown,thisArg?:any):number;}interface Uint32Array{findLast<S extends number>(predicate:(value:number,index:number,array:Uint32Array)=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:number,index:number,array:Uint32Array)=>unknown,thisArg?:any):number|undefined;findLastIndex(predicate:(value:number,index:number,array:Uint32Array)=>unknown,thisArg?:any):number;}interface Float32Array{findLast<S extends number>(predicate:(value:number,index:number,array:Float32Array)=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:number,index:number,array:Float32Array)=>unknown,thisArg?:any):number|undefined;findLastIndex(predicate:(value:number,index:number,array:Float32Array)=>unknown,thisArg?:any):number;}interface Float64Array{findLast<S extends number>(predicate:(value:number,index:number,array:Float64Array)=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:number,index:number,array:Float64Array)=>unknown,thisArg?:any):number|undefined;findLastIndex(predicate:(value:number,index:number,array:Float64Array)=>unknown,thisArg?:any):number;}interface BigInt64Array{findLast<S extends bigint>(predicate:(value:bigint,index:number,array:BigInt64Array)=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:bigint,index:number,array:BigInt64Array)=>unknown,thisArg?:any):bigint|undefined;findLastIndex(predicate:(value:bigint,index:number,array:BigInt64Array)=>unknown,thisArg?:any):number;}interface BigUint64Array{findLast<S extends bigint>(predicate:(value:bigint,index:number,array:BigUint64Array)=>value is S,thisArg?:any):S|undefined;findLast(predicate:(value:bigint,index:number,array:BigUint64Array)=>unknown,thisArg?:any):bigint|undefined;findLastIndex(predicate:(value:bigint,index:number,array:BigUint64Array)=>unknown,thisArg?:any):number;}"
};

export default fileData;